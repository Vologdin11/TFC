// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/andrey/projects/go-marathon-team-3/pkg/tfsmetrics/azure/client.go

// Package mock_azure is a generated GoMock package.
package mock_azure

import (
	azure "go-marathon-team-3/pkg/tfsmetrics/azure"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAzureInterface is a mock of AzureInterface interface.
type MockAzureInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAzureInterfaceMockRecorder
}

// MockAzureInterfaceMockRecorder is the mock recorder for MockAzureInterface.
type MockAzureInterfaceMockRecorder struct {
	mock *MockAzureInterface
}

// NewMockAzureInterface creates a new mock instance.
func NewMockAzureInterface(ctrl *gomock.Controller) *MockAzureInterface {
	mock := &MockAzureInterface{ctrl: ctrl}
	mock.recorder = &MockAzureInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAzureInterface) EXPECT() *MockAzureInterfaceMockRecorder {
	return m.recorder
}

// Azure mocks base method.
func (m *MockAzureInterface) Azure() *azure.Azure {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Azure")
	ret0, _ := ret[0].(*azure.Azure)
	return ret0
}

// Azure indicates an expected call of Azure.
func (mr *MockAzureInterfaceMockRecorder) Azure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Azure", reflect.TypeOf((*MockAzureInterface)(nil).Azure))
}

// ChangedRows mocks base method.
func (m *MockAzureInterface) ChangedRows(currentFilePath, version string) (int, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangedRows", currentFilePath, version)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ChangedRows indicates an expected call of ChangedRows.
func (mr *MockAzureInterfaceMockRecorder) ChangedRows(currentFilePath, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangedRows", reflect.TypeOf((*MockAzureInterface)(nil).ChangedRows), currentFilePath, version)
}

// Connect mocks base method.
func (m *MockAzureInterface) Connect() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Connect")
}

// Connect indicates an expected call of Connect.
func (mr *MockAzureInterfaceMockRecorder) Connect() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Connect", reflect.TypeOf((*MockAzureInterface)(nil).Connect))
}

// GetChangesetChanges mocks base method.
func (m *MockAzureInterface) GetChangesetChanges(id *int, project string) (*azure.ChangeSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChangesetChanges", id, project)
	ret0, _ := ret[0].(*azure.ChangeSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChangesetChanges indicates an expected call of GetChangesetChanges.
func (mr *MockAzureInterfaceMockRecorder) GetChangesetChanges(id, project interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChangesetChanges", reflect.TypeOf((*MockAzureInterface)(nil).GetChangesetChanges), id, project)
}

// GetChangesets mocks base method.
func (m *MockAzureInterface) GetChangesets(nameOfProject string) ([]*int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChangesets", nameOfProject)
	ret0, _ := ret[0].([]*int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChangesets indicates an expected call of GetChangesets.
func (mr *MockAzureInterfaceMockRecorder) GetChangesets(nameOfProject interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChangesets", reflect.TypeOf((*MockAzureInterface)(nil).GetChangesets), nameOfProject)
}

// ListOfProjects mocks base method.
func (m *MockAzureInterface) ListOfProjects() ([]*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOfProjects")
	ret0, _ := ret[0].([]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListOfProjects indicates an expected call of ListOfProjects.
func (mr *MockAzureInterfaceMockRecorder) ListOfProjects() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOfProjects", reflect.TypeOf((*MockAzureInterface)(nil).ListOfProjects))
}

// TfvcClientConnection mocks base method.
func (m *MockAzureInterface) TfvcClientConnection() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TfvcClientConnection")
	ret0, _ := ret[0].(error)
	return ret0
}

// TfvcClientConnection indicates an expected call of TfvcClientConnection.
func (mr *MockAzureInterfaceMockRecorder) TfvcClientConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TfvcClientConnection", reflect.TypeOf((*MockAzureInterface)(nil).TfvcClientConnection))
}
